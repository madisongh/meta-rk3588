From e70e1e532585a11efb6a1b94164d5fbcf9522e22 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Wed, 10 May 2023 07:14:59 -0700
Subject: [PATCH] CMakeLists changes for OE builds

Signed-off-by: Matt Madison <matt@madison.systems>
---
 CMakeLists.txt      | 68 ++++++++++++++++-----------------------------
 test/CMakeLists.txt |  1 +
 2 files changed, 25 insertions(+), 44 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d2e4e16..03222c6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,8 @@
 cmake_minimum_required (VERSION 2.8)
 project (rkcrypto C)
 
+include(GNUInstallDirs)
+
 ################################################################################
 # toolchain config
 ################################################################################
@@ -12,28 +14,6 @@ else ()
 	set(CMAKE_SYSTEM_PROCESSOR arm)
 endif ()
 
-set (TOOLCHAIN_PREBUILTS "${CMAKE_CURRENT_SOURCE_DIR}/../../prebuilts")
-set (TOOLCHAIN_PATH_ARM32 "gcc/linux-x86/arm/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf/bin")
-set (TOOLCHAIN_PATH_AARCH64 "gcc/linux-x86/aarch64/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu/bin")
-set (CROSS_COMPILE32 "arm-none-linux-gnueabihf-gcc")
-set (CROSS_COMPILE64 "aarch64-none-linux-gnu-gcc")
-set (CROSS_COMPILE32_GXX "arm-none-linux-gnueabihf-g++")
-set (CROSS_COMPILE64_GXX "aarch64-none-linux-gnu-g++")
-set (AARCH64_TOOLCHAIN_GCC "${TOOLCHAIN_PREBUILTS}/${TOOLCHAIN_PATH_AARCH64}/${CROSS_COMPILE64}")
-set (AARCH64_TOOLCHAIN_GXX "${TOOLCHAIN_PREBUILTS}/${TOOLCHAIN_PATH_AARCH64}/${CROSS_COMPILE64_GXX}")
-set (ARM32_TOOLCHAIN_GCC "${TOOLCHAIN_PREBUILTS}/${TOOLCHAIN_PATH_ARM32}/${CROSS_COMPILE32}")
-set (ARM32_TOOLCHAIN_GXX "${TOOLCHAIN_PREBUILTS}/${TOOLCHAIN_PATH_ARM32}/${CROSS_COMPILE32_GXX}")
-
-if (CMAKE_SYSTEM_PROCESSOR STREQUAL aarch64)
-	set (CMAKE_C_COMPILER ${AARCH64_TOOLCHAIN_GCC})
-	set (CMAKE_CXX_COMPILER ${AARCH64_TOOLCHAIN_GXX})
-	set (ARM_PLATFORM "arm64")
-else ()
-	set (CMAKE_C_COMPILER ${ARM32_TOOLCHAIN_GCC})
-	set (CMAKE_CXX_COMPILER ${ARM32_TOOLCHAIN_GXX})
-	set (ARM_PLATFORM "arm")
-endif ()
-
 ################################################################################
 # compile flags
 ################################################################################
@@ -54,35 +34,35 @@ endif(NOT CMAKE_BUILD_TYPE)
 ################################################################################
 include_directories(include)
 file(GLOB SOURCES "src/*.c")
+set(RKCRYPTO_PUBLIC_HEADERS
+  include/rkcrypto_mem.h
+  include/rkcrypto_random.h
+  include/rkcrypto_trace.h
+  include/rkcrypto_core.h
+  include/rkcrypto_common.h
+  include/rkcrypto_otp_key.h)
+set(RKCRYPTO_PRIVATE_HEADERS
+  include/dma-heap.h
+  include/rk_list.h
+  include/rkcrypto_core_int.h
+  include/cryptodev.h
+  include/rk_cryptodev.h
+)
 
+find_package(PkgConfig)
+pkg_check_modules(LIBDRM libdrm REQUIRED IMPORTED_TARGET libdrm)
 ################################################################################
-# libdrm dependencies
-################################################################################
-include_directories(third_party/libdrm/include)
-include_directories(third_party/libdrm/include/drm)
-file(GLOB SOURCES_DRM "third_party/libdrm/src/*.c")
-add_definitions(-DMAJOR_IN_SYSMACROS=1 -D_GNU_SOURCE)
 
-################################################################################
-# libteec dependencies
-################################################################################
-add_definitions(-DBINARY_PREFIX=\"TEEC\")
-set(TEEC_PATH third_party/optee_client/libteec)
-include_directories(${TEEC_PATH}/../public ${TEEC_PATH}/include)
-file(GLOB SOURCES_TEEC
-	${TEEC_PATH}/src/tee_client_api.c
-	${TEEC_PATH}/src/teec_trace.c)
+find_library(LIBTEEC teec)
 
 ################################################################################
 # build librkcrypto shared library
 ################################################################################
-add_library(rkcrypto SHARED ${SOURCES} ${SOURCES_DRM} ${SOURCES_TEEC})
-
-################################################################################
-# build librkcrypto static library
-################################################################################
-add_library(rkcrypto_static STATIC ${SOURCES} ${SOURCES_DRM} ${SOURCES_TEEC})
-SET_TARGET_PROPERTIES (rkcrypto_static PROPERTIES OUTPUT_NAME "rkcrypto")
+add_library(rkcrypto SHARED ${SOURCES} ${RKCRYPTO_PUBLIC_HEADERS} ${RKCRYPTO_PRIVATE_HEADERS})
+target_link_libraries(rkcrypto PUBLIC ${LIBTEEC} PkgConfig::LIBDRM)
+set_target_properties(rkcrypto PROPERTIES VERSION 1.2.0 SOVERSION 1)
+install(TARGETS rkcrypto LIBRARY)
+install(FILES ${RKCRYPTO_PUBLIC_HEADERS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/librkcrypto)
 
 ################################################################################
 # build other components
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 960ef31..c86455c 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -5,3 +5,4 @@ include_directories(include/c_mode)
 add_executable(librkcrypto_test ${TEST_SOURCES} ${C_MODE_SOURCES})
 
 target_link_libraries(librkcrypto_test rkcrypto)
+install(TARGETS librkcrypto_test RUNTIME)
-- 
2.34.1

